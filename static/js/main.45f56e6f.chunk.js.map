{"version":3,"sources":["Components/Main/Main.module.css","Components/FeedbackOptions/FeedbackOptions.js","Components/NotificationMessage/NotificationMessage.js","Components/Statistics/Statistics.js","Components/Main/Main.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","funcFeedback","className","classes","BtnWrapper","Button","onClick","id","NotificationMessage","noFeedback","Statistics","states","funcTotal","funcCount","Title","btnWrapper","good","neutral","bad","toFixed","Main","state","getFeedback","e","name","target","setState","prevState","getTotal","countPositivePercentage","this","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uFACAA,EAAOC,QAAU,CAAC,WAAa,yBAAyB,OAAS,qBAAqB,MAAQ,oBAAoB,WAAa,2B,2JCwBhHC,EAtBS,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACzB,OACE,wBAAIC,UAAWC,IAAQC,YACrB,wBAAIF,UAAWC,IAAQE,QACrB,4BAAQC,QAASL,EAAcM,GAAG,QAAlC,SAIF,wBAAIL,UAAWC,IAAQE,QACrB,4BAAQC,QAASL,EAAcM,GAAG,WAAlC,YAIF,wBAAIL,UAAWC,IAAQE,QACrB,4BAAQC,QAASL,EAAcM,GAAG,OAAlC,UCNOC,EARa,WAC1B,OACE,oCACE,wBAAIN,UAAWC,IAAQM,YAAvB,uBCmBSC,EArBI,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,OAAQC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,UACvC,OACE,oCACE,wBAAIX,UAAWC,IAAQW,OAAvB,cACCF,IAAc,EACb,wBAAIV,UAAWC,IAAQY,YACrB,wBAAIb,UAAU,mBAAd,SAAuCS,EAAOK,MAC9C,wBAAId,UAAU,mBAAd,YAA0CS,EAAOM,SACjD,wBAAIf,UAAU,mBAAd,QAAsCS,EAAOO,KAC7C,wBAAIhB,UAAU,mBAAd,UAAwCU,KACxC,wBAAIV,UAAU,mBAAd,sBACsBW,IAAYM,QAAQ,GAD1C,MAKF,kBAAC,EAAD,QCwBOC,E,4MArCbC,MAAQ,CACNL,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPI,YAAc,SAACC,GACb,IAAMC,EAAOD,EAAEE,OAAOlB,GACtB,EAAKmB,UAAS,SAACC,GAAD,sBACXH,EAAOG,EAAUH,GAAQ,O,EAI9BI,SAAW,WAAO,IAAD,EACgB,EAAKP,MACpC,OAFe,EACPL,KADO,EACDC,QADC,EACQC,K,EAIzBW,wBAA0B,WACxB,OAAQ,EAAKR,MAAML,KAAO,EAAKY,WAAc,K,uDAI7C,OACE,oCACE,wBAAI1B,UAAWC,IAAQW,OAAvB,8BACA,kBAAC,EAAD,CAAiBb,aAAc6B,KAAKR,cACpC,kBAAC,EAAD,CACEX,OAAQmB,KAAKT,MACbT,UAAWkB,KAAKF,SAChBf,UAAWiB,KAAKD,+B,GA/BPE,aCQJC,EATH,WACV,OACE,oCAEE,kBAAC,EAAD,QCHNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.45f56e6f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BtnWrapper\":\"Main_BtnWrapper__D4xl6\",\"Button\":\"Main_Button__3Y-xW\",\"Title\":\"Main_Title__3JWl-\",\"noFeedback\":\"Main_noFeedback__28WSO\"};","import React from \"react\";\nimport classes from \"../Main/Main.module.css\";\n\nconst FeedbackOptions = ({ funcFeedback }) => {\n  return (\n    <ul className={classes.BtnWrapper}>\n      <li className={classes.Button}>\n        <button onClick={funcFeedback} id=\"good\">\n          Good\n        </button>\n      </li>\n      <li className={classes.Button}>\n        <button onClick={funcFeedback} id=\"neutral\">\n          Neutral\n        </button>\n      </li>\n      <li className={classes.Button}>\n        <button onClick={funcFeedback} id=\"bad\">\n          Bad\n        </button>\n      </li>\n    </ul>\n  );\n};\n\nexport default FeedbackOptions;\n","import React from \"react\";\nimport classes from \"../Main/Main.module.css\";\n\nconst NotificationMessage = () => {\n  return (\n    <>\n      <h2 className={classes.noFeedback}>No feedback given</h2>\n    </>\n  );\n};\n\nexport default NotificationMessage;\n","import React from \"react\";\nimport classes from \"../Main/Main.module.css\";\nimport Notification from \"../NotificationMessage/NotificationMessage\";\n\nconst Statistics = ({ states, funcTotal, funcCount }) => {\n  return (\n    <>\n      <h2 className={classes.Title}>Statistics</h2>\n      {funcTotal() > 0 ? (\n        <ul className={classes.btnWrapper}>\n          <li className=\"characteristics\">Good: {states.good}</li>\n          <li className=\"characteristics\">Neutral: {states.neutral}</li>\n          <li className=\"characteristics\">Bad: {states.bad}</li>\n          <li className=\"characteristics\">Total: {funcTotal()}</li>\n          <li className=\"characteristics\">\n            Positive feedback: {funcCount().toFixed(0)}%\n          </li>\n        </ul>\n      ) : (\n        <Notification />\n      )}\n    </>\n  );\n};\n\nexport default Statistics;\n","import React, { Component } from \"react\";\nimport classes from \"../Main/Main.module.css\";\nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"../Statistics/Statistics\";\n\nclass Main extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  getFeedback = (e) => {\n    const name = e.target.id;\n    this.setState((prevState) => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  getTotal = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositivePercentage = () => {\n    return (this.state.good / this.getTotal()) * 100;\n  };\n\n  render() {\n    return (\n      <>\n        <h2 className={classes.Title}>Please leave your feedback</h2>\n        <FeedbackOptions funcFeedback={this.getFeedback} />\n        <Statistics\n          states={this.state}\n          funcTotal={this.getTotal}\n          funcCount={this.countPositivePercentage}\n        />\n      </>\n    );\n  }\n}\n\nexport default Main;\n\n// const Main = () => {\n//   return (\n//     <>\n//       <FeedbackOptions />\n//     </>\n//   );\n// };\n\n// export default Main;\n","import React from \"react\";\n// import Widget from \"./Components/Widget/Widget\";\nimport Main from \"./Components/Main/Main\";\n\nconst App = () => {\n  return (\n    <>\n      {/* <Widget /> */}\n      <Main />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}